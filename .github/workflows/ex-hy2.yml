name: Process Cross-Repo Proxy Subscription

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点自动运行
  workflow_dispatch:      # 允许手动触发

jobs:
  process-subscription:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false  # 重要！跨仓库操作时需要

    - name: Get decoded.txt from external repo
      run: |
        # 使用Raw URL获取文件
        curl -sL -o external_decoded.txt \
          "https://raw.githubusercontent.com/DSLZL/proxy/main/proxies/decoded.txt"
        
        # 验证文件获取成功
        if [ ! -s external_decoded.txt ]; then
          echo "错误：未能获取外部仓库文件"
          exit 1
        fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Process and encode
      run: |
        python - <<EOF
        import base64
        import os

        input_file = 'external_decoded.txt'
        output_path = 'proxies/encoded.txt'  # 保存到本仓库的proxies目录

        try:
            # 读取外部文件
            with open(input_file, 'r') as f:
                content = f.read()

            # 过滤hy2节点（兼容大小写）
            filtered = '\n'.join(
                line for line in content.splitlines()
                if not line.lower().startswith('hy2://')
            )

            # Base64编码
            encoded = base64.b64encode(filtered.encode()).decode()

            # 创建目录并写入文件
            os.makedirs(os.path.dirname(output_path), exist_ok=True)
            with open(output_path, 'w') as f:
                f.write(encoded)

            print(f"原始节点数: {len(content.splitlines())}")
            print(f"过滤后节点数: {len(filtered.splitlines())}")

        except Exception as e:
            print(f"处理失败: {str(e)}")
            exit(1)
        EOF

    - name: Commit and push
      run: |
        # 配置Git身份
        git config --global user.name "DSLZL"
        git config --global user.email "q2891362919@163.com"

        # 检测变更并提交
        git add proxies/encoded.txt
        if git diff --cached --quiet; then
          echo "没有需要提交的变更"
        else
          git commit -m "自动更新代理订阅 [skip ci]"
          git push
        fi